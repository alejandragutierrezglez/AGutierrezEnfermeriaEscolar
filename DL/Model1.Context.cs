//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class AGutierrezEnfermeriaEscolarEntities : DbContext
    {
        public AGutierrezEnfermeriaEscolarEntities()
            : base("name=AGutierrezEnfermeriaEscolarEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Alumno> Alumnos { get; set; }
        public virtual DbSet<Receta> Recetas { get; set; }
        public virtual DbSet<RecetasAlumno> RecetasAlumnos { get; set; }
    
        public virtual ObjectResult<AlumnosGetAll_Result> AlumnosGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AlumnosGetAll_Result>("AlumnosGetAll");
        }
    
        public virtual int RecetaAdd(Nullable<System.DateTime> fecha, string diagnostico, string tratamiento, Nullable<int> idReceta, Nullable<int> matricula)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var diagnosticoParameter = diagnostico != null ?
                new ObjectParameter("Diagnostico", diagnostico) :
                new ObjectParameter("Diagnostico", typeof(string));
    
            var tratamientoParameter = tratamiento != null ?
                new ObjectParameter("Tratamiento", tratamiento) :
                new ObjectParameter("Tratamiento", typeof(string));
    
            var idRecetaParameter = idReceta.HasValue ?
                new ObjectParameter("IdReceta", idReceta) :
                new ObjectParameter("IdReceta", typeof(int));
    
            var matriculaParameter = matricula.HasValue ?
                new ObjectParameter("Matricula", matricula) :
                new ObjectParameter("Matricula", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RecetaAdd", fechaParameter, diagnosticoParameter, tratamientoParameter, idRecetaParameter, matriculaParameter);
        }
    
        public virtual ObjectResult<RecetasAlumnosGetAll_Result> RecetasAlumnosGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RecetasAlumnosGetAll_Result>("RecetasAlumnosGetAll");
        }
    
        public virtual int RecetaUpdate(Nullable<int> idReceta, Nullable<System.DateTime> fecha, string diagnostico, string tratamiento)
        {
            var idRecetaParameter = idReceta.HasValue ?
                new ObjectParameter("IdReceta", idReceta) :
                new ObjectParameter("IdReceta", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var diagnosticoParameter = diagnostico != null ?
                new ObjectParameter("Diagnostico", diagnostico) :
                new ObjectParameter("Diagnostico", typeof(string));
    
            var tratamientoParameter = tratamiento != null ?
                new ObjectParameter("Tratamiento", tratamiento) :
                new ObjectParameter("Tratamiento", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RecetaUpdate", idRecetaParameter, fechaParameter, diagnosticoParameter, tratamientoParameter);
        }
    }
}
